uestion (Set#1 - Question1)
Create a query that lists each movie, the film category it is classified in, and the number of times it has been rented out.

For this query, you will need 5 tables: Category, Film_Category, Inventory, Rental and Film. Your solution should have three columns: Film title, Category name and Count of Rentals.
HINT: One way to solve this is to create a count of movies using aggregations, subqueries and Window functions.

WITH t1 AS 
(
   SELECT
      * 
   FROM
      category c 
      JOIN
         film_category fc 
         ON c.category_id = fc.category_id 
      JOIN
         film f 
         ON fc.film_id = f.film_id 
      JOIN
         inventory i 
         ON f.film_id = i.film_id 
      JOIN
         rental r 
         ON i.inventory_id = r.inventory_id 
   WHERE
      c.name IN 
      (
         'Animation',
         'Children',
         'Comedy',
         'Family',
         'Classics',
         'Music'
      )
)
SELECT
   t1.title film_title,
   t1.name category_name,
   Count(t1.title) rental_count 
FROM
   t1 
GROUP BY
   t1.name,
   t1.title 
ORDER BY
   t1.name,
   t1.title;

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Question#2(SET_1 - question2)
Can you provide a table with the movie titles and divide them into 4 levels (first_quarter, second_quarter, third_quarter, and final_quarter) based on the quartiles (25%, 50%, 75%) of the rental duration for movies 
across all categories? 
HINT: One way to solve it requires the use of percentiles, Window functions, subqueries or temporary tables.

WITH t1 AS 
(
   SELECT
      * 
   FROM
      category c 
      JOIN
         film_category fc 
         ON c.category_id = fc.category_id 
      JOIN
         film f 
         ON fc.film_id = f.film_id 
   WHERE
      c.name IN
      (
         'Animation',
         'Children',
         'Classics',
         'Comedy',
         'Family',
         'Music'
      )
)
SELECT
   t1.title,
   t1.name,
   t1.rental_duration,
   NTILE(4) OVER(
ORDER BY
   rental_duration) standard_quartile 
FROM
   t1 
order by
   standard_quartile;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Question 3(set#2 Question_1 )
Write a query that returns the store ID for the store, the year and month and the number of rental orders each store has fulfilled for that month. Your table should include a column for each of the following: 
year, month, store ID and count of rental orders fulfilled during that month.
HINT: One way to solve this query is the use of aggregations.

SELECT
   DATE_PART('month', r.rental_date) rental_month,
   DATE_PART('YEAR', r.rental_date) rental_year,
   s2.store_id,
   count(rental_id) count_rentals 
FROM
   store s1 
   JOIN
      staff s2 
      ON s1.store_id = s2.store_id 
   JOIN
      rental r 
      ON s2.staff_id = r.staff_id 
GROUP BY
   rental_month,
   rental_year,
   s2.store_id 
ORDER BY
   count_rentals DESC;
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Question 4(set#1 Question_3 )

WITH t1 AS 
(
   SELECT
      c.name,
      f.rental_duration,
      NTILE(4) OVER (
   ORDER BY
      f.rental_duration)AS standard_quartile 
   FROM
      category c 
      JOIN
         film_category fc 
         ON c.category_id = fc.category_id 
      JOIN
         film f 
         ON fc.film_id = f.film_id 
   WHERE
      c.name IN 
      (
         'Animation',
         'Children',
         'Classics',
         'Comedy',
         'Family',
         'Music'
      )
)
SELECT
   t1.name,
   t1.standard_quartile,
   count(standard_quartile) 
FROM
   t1 
GROUP BY
   name,
   standard_quartile 
ORDER BY
   name,
   standard_quartile





----------------------------------------------------------------------------------------------------------------------
